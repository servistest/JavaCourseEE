<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns="http://www.springframework.org/schema/beans" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="dataSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="XADBMSA"/>
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">jdbc:postgresql://localhost:5432/JtaGlobalA</prop>
                <prop key="serverName">localhost</prop>
                <prop key="databaseName">JtaGlobalA</prop>
                <prop key="portNumber">5432</prop>
                <prop key="user">postgres</prop>
                <prop key="password">admin</prop>
            </props>
        </property>
        <property name="poolSize" value="1"/>
    </bean>

    <bean id="dataSourceB" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="XADBMSB"/>
        <property name="xaDataSourceClassName" value="org.postgresql.xa.PGXADataSource"/>
        <!--<property name="url" value="${mysql_url}"/>-->
        <property name="xaProperties">
            <props>
                <prop key="url">jdbc:postgresql://localhost:5432/JtaGlobalB</prop>
                <prop key="serverName">localhost</prop>
                <prop key="databaseName">JtaGlobalB</prop>
                <prop key="portNumber">5432</prop>
                <prop key="user">postgres</prop>
                <prop key="password">admin</prop>
            </props>
        </property>
        <property name="poolSize" value="1"/>
    </bean>

    <bean id="emfBase" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          abstract="true">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="edu.globaltransaction"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>
                <prop key="hibernate.transaction.manager_lookup_class">
                    com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
                <prop key="hibernate.dialect"> org.hibernate.dialect.PostgreSQL95Dialect</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="javax.persistence.transactionType">jta</prop>
            </props>
        </property>
    </bean>


    <!--<bean id="emfBase" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"-->
          <!--abstract="true">-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>-->
        <!--</property>-->
        <!--<property name="packagesToScan" value="edu.globaltransaction"/>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.CMTTransactionFactory</prop>-->
                <!--<prop key="hibernate.transaction.jta.platform">com.atomikos.icatch.jta.hibernate4.AtomikosPlatform></prop>-->
                <!--&lt;!&ndash;<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.</prop>&ndash;&gt;-->
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL95Dialect</prop>-->
                <!--<prop key="hibernate.max_fetch_depth">3</prop>-->
                <!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
                <!--<prop key="hibernate.jdbc.batch_size">10</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="emfA" parent="emfBase">
        <property name="dataSource" ref="dataSourceA"/>
        <property name="persistenceUnitName" value="emfA"/>
    </bean>

    <bean id="emfB" parent="emfBase">
        <property name="dataSource" ref="dataSourceB"/>
        <property name="persistenceUnitName" value="emfB"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true"/>
     </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>

    <context:component-scan base-package="edu.globaltransaction"/>
    <context:annotation-config/>

    <!--<jpa:repositories base-package="edu.globaltransaction"-->
                      <!--entity-manager-factory-ref="emfA"-->
                      <!--transaction-manager-ref="transactionManager"/>-->





</beans>