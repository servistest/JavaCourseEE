<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
           version="3.0">
    <display-name>Spring MVC REST </display-name>

    <!--Если приложению требуется только поддержка DI, то с контейнером DI в Spring-->
    <!--можно взаимодействовать через интерфейс BeanFactory. В этом случае приложение-->
    <!--должно создать экземпляр класса, реализующего интерфейс BeanFactory,-->
    <!--и сконфиrурировать его в соответствие с информацией о бине и зависимостях.-->
    <!--После того, как это сделано, приложение может получать доступ к бинам через-->
    <!--BeanFactory и пользоваться их обработкой.-->
    <!--В ряде случаев вся настройка подобного-->
    <!--рода производится автоматически (например, в веб-приложении экземпляр-->
    <!--ApplicationContext будет загружаться веб-контейнером во время начальной загрузки-->
    <!--приложения с помощью класса ContextLoaderListener, предоставляемого-->
    <!--Spring, который объявлен в файле дескрипторов web. xml). Но во многих случаях-->
    <!--кодировать настройку приходится самостоятельно. Все примеры, приведенные в-->
    <!--этой главе, требуют ручной настройки реализации BeanFactory.-->
    <!--Bootstrap listener to start up and shut down Spring's root WebApplicationContext-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>

    </listener>

    <!--Далее, загруженный Front Controller (org.springframework.web.servlet.DispatcherServlet),-->
    <!--„поднимает“ контекст приложения, после чего все компоненты, описанные в файле конфигурации,-->
    <!--опять-таки статновятся доступны, но теперь уже из web приложения.-->
    <!--<servlet>-->
        <!--<servlet-name>mvcrest</servlet-name>-->
        <!--<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
        <!--<init-param>-->
            <!--<param-name>contextConfigLocation</param-name>-->
            <!--<param-value>/WEB-INF/spring/applicationContext.xml</param-value>-->
        <!--</init-param>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>mvcrest</servlet-name>-->
        <!--<url-pattern>/mvcrest/*</url-pattern>-->
    <!--</servlet-mapping>-->

</web-app>
